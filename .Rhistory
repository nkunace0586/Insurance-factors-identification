# Loading libraries
library(tidyverse)
library(lubridate)
library(readxl)
library(readr)
library(dplyr)
library(data.table)
library(scales)
library(ggplot2)
library(dplyr)
# Loading data
df.raw <- read.csv("../Insurance_factor_identification.csv")
# Loading data
df.raw <- read.csv("../Insurance_factor_identification.csv")
# Loading data
df.raw <- read.csv("..//Insurance_factor_identification.csv")
# Loading libraries
library(tidyverse)
library(lubridate)
library(readxl)
library(readr)
library(dplyr)
library(data.table)
library(scales)
library(ggplot2)
library(dplyr)
# Loading data
df.raw <- read.csv("../Insurance_factor_identification.csv")
# Loading data
df.raw <- read.csv("...data/Insurance_factor_identification.csv")
# Loading libraries
library(tidyverse)
library(lubridate)
library(readxl)
library(readr)
library(dplyr)
library(data.table)
library(scales)
library(ggplot2)
library(dplyr)
# Loading data
df.raw <- read.csv("../Insurance factors identification/Insurance_factor_identification.csv")
# Loading libraries
library(tidyverse)
library(lubridate)
library(readxl)
library(readr)
library(dplyr)
library(data.table)
library(scales)
library(ggplot2)
library(dplyr)
# Loading data
df.raw <- read.csv("../Insurance factors identification/Insurance_factor_identification.csv")
# Data inspection
names(df.raw)
head(df.raw)
str(df.raw)
# Check missing values
anyNA(df.raw)
# Check duplicates
anyDuplicated(df.raw)
# Factor categorical columns
df.1 <- df.raw %>%
mutate(Kilometres=as.factor(Kilometres), Zone= as.factor(Zone), Bonus=as.factor(Bonus), Make= as.factor(Make))
# Summary statistics
summary(df.1)
# Frequency tables for categorical variables
# Frequency table for Kilometres
cat("Table 1: Frequency Distribution of Kilometres\n")
print(table(df.1$Kilometres))
# Frequency table for Zone
cat("\nTable 2: Frequency Distribution of Zone\n")
print(table(df.1$Zone))
# Frequency table for Bonus
cat("\nTable 3: Frequency Distribution of Bonus\n")
print(table(df.1$Bonus))
# Frequency table for Make
cat("\nTable 4: Frequency Distribution of Make\n")
print(table(df.1$Make))
# Data's long format
df_long <- df.1 %>%
pivot_longer(cols= c(Make, Zone, Kilometres, Bonus), names_to = "Category", values_to = "Value")
# Plot with facet_wrap
ggplot(df_long, aes(x = factor(Value), y = Claims, fill = Category)) +
geom_bar(stat = "identity", show.legend = FALSE) +
facet_wrap(~Category, scales = "free_x") +
labs(title = "Claims by Bonus, Kilometres, Make and Zone", x = "Category", y = "Total Claims") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, size = 12, face = "bold"))
# Scatterplots, density/histograms plots, and correlation coefficients for Payment vs Claims vs Insured Policy Years
library(GGally)
scatter_corr_plot <- ggpairs(df.1, columns = c("Payment", "Claims", "Insured"))
scatter_corr_plot
# Linear model to check the influence of variables on Payment
lm.payment <- lm(Payment ~ Kilometres + Zone + Bonus + Make + Insured + Claims, data = df.1)
summary(lm.payment)
# Perform ANOVA on the regression model
anova_result <- anova(lm.payment)
anova_result
# Aggregate the dataset based on location, kilometre, and bonus level.
df.aggregated <- df.1 %>%
group_by(Zone, Kilometres, Bonus) %>%
summarise(Total_Insured = sum(Insured),
Total_Claims = sum(Claims),
Total_Payment = sum(Payment)) %>%
arrange(desc(Total_Payment))
# Aggregated data
head(df.aggregated)
# Bar charts for aggregated total Payment by Zone and Kilometers.
# Summarize the data by Zone to get the total payment per region
df.1 <- df.1 %>%
group_by(Zone) %>%
mutate(`Total_Payment (Per 10)` = round(sum(Payment)/10,2))
# plot
ggplot(df.1, aes(x = Zone)) +
geom_bar(aes(y = Payment, fill = Kilometres), stat = "identity", position = "dodge") +
geom_line(aes(y = `Total_Payment (Per 10)`, color= `Total Payment Per Zone`, group = 1),
color = "blue", size = 1, linetype = "dashed") +
geom_point(aes(x = Zone, y = `Total_Payment (Per 10)`),
color = "blue", size = 2.5) +
labs(title = "Total Payment by Zone and Kilometers",
x = "Zone",
y = "Total Payment by Zone and Kilometers",
fill = "Kilometers",
caption="The blue dotted line represents the total payment in units of 10 Skr for each zone.") +
theme_minimal() +
scale_y_continuous(
labels = label_number(scale_cut = cut_short_scale()) ,
sec.axis = sec_axis(~ ., name = "Zone Total Payment (Per 10 Skr)",
labels = label_number(scale_cut = cut_short_scale()))
) +
theme(
plot.title = element_text(hjust = 0.5, size = 12, face = "bold"),
axis.title.y.right = element_text(color = "blue"),
axis.text.y.right = element_text(color = "blue"),
axis.line.y.right = element_line(color = "blue")
)
# Bar charts for total Claims by Bonus Level and Kilometres
# Summarize the data by Bonus to get the total payment per region
df.1 <- df.1 %>%
group_by(Bonus) %>%
mutate(`Total_Claims (Per 10)` = round(sum(Claims)/10,2))
# plot
ggplot(df.1, aes(x = Bonus)) +
geom_bar(aes(y = Claims, fill = Kilometres), stat = "identity", position = "dodge") +
geom_line(aes(y = `Total_Claims (Per 10)`, color= `Total Claims Per Bonus Level`, group = 1),
color = "blue", size = 1, linetype = "dashed") +
geom_point(aes(y = `Total_Claims (Per 10)`),
color = "blue", size = 2.5) +
labs(title = "Claims by Bonus Level and Kilometers",
x = "Bonus Level",
y = "Claims by Bonus Level and Kilometers",
fill = "Kilometers",
caption="The blue dotted line represents the total number claims in units of 10 for each bonus level.") +
theme_minimal() +
scale_y_continuous(
labels = label_number(scale_cut = cut_short_scale()) ,
sec.axis = sec_axis(~ ., name = "Bonus Level Total Claims (Per 10)",
labels = label_number(scale_cut = cut_short_scale()))
) +
theme(
plot.title = element_text(hjust = 0.5, size = 12, face = "bold"),
axis.title.y.right = element_text(color = "blue"),
axis.text.y.right = element_text(color = "blue"),
axis.line.y.right = element_line(color = "blue")
)
# Linear model to check the influence of variables on Claim Rate
l.mod_claims <- lm(Claims ~ Kilometres + Zone + Bonus + Make + Insured, data = df.1)
summary(l.mod_claims)
# Bar charts for aggregated total Payment by Zone and Kilometers.
# Summarize the data by Zone to get the total payment per region
df.1 <- df.1 %>%
group_by(Zone) %>%
mutate(`Total_Payment (Per 10)` = round(sum(Payment)/10,2))
# plot
ggplot(df.1, aes(x = Zone)) +
geom_bar(aes(y = Payment, fill = Kilometres), stat = "identity", position = "dodge") +
geom_line(aes(y = `Total_Payment (Per 10)`, color= `Total Payment Per Zone`, group = 1),
color = "blue", linewidth = 1, linetype = "dashed") +
geom_point(aes(x = Zone, y = `Total_Payment (Per 10)`),
color = "blue", size = 2.5) +
labs(title = "Total Payment by Zone and Kilometers",
x = "Zone",
y = "Total Payment by Zone and Kilometers",
fill = "Kilometers",
caption="The blue dotted line represents the total payment in units of 10 Skr for each zone.") +
theme_minimal() +
scale_y_continuous(
labels = label_number(scale_cut = cut_short_scale()) ,
sec.axis = sec_axis(~ ., name = "Zone Total Payment (Per 10 Skr)",
labels = label_number(scale_cut = cut_short_scale()))
) +
theme(
plot.title = element_text(hjust = 0.5, size = 12, face = "bold"),
axis.title.y.right = element_text(color = "blue"),
axis.text.y.right = element_text(color = "blue"),
axis.line.y.right = element_line(color = "blue")
)
